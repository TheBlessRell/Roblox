-- Initialize the GUI (The Shop)
local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local Title = Instance.new("TextLabel")
local UIPadding = Instance.new("UIPadding")
local ButtonStartJob = Instance.new("TextButton")
local ButtonAutoFarm = Instance.new("TextButton")

-- Set the parent of the GUI to the player's screen
ScreenGui.Parent = game.CoreGui
ScreenGui.Name = "TheShopUI" -- Updated name

-- Frame for the main content
Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
Frame.Position = UDim2.new(0.3, 0, 0.3, 0)
Frame.Size = UDim2.new(0, 400, 0, 400)
Frame.Active = true
Frame.Draggable = true

-- Padding inside the frame for better spacing
UIPadding.Parent = Frame
UIPadding.PaddingTop = UDim.new(0, 10)
UIPadding.PaddingLeft = UDim.new(0, 10)
UIPadding.PaddingRight = UDim.new(0, 10)

-- Title label
Title.Parent = Frame
Title.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
Title.Size = UDim2.new(1, 0, 0.2, 0)
Title.Text = "The Shop" -- Updated text
Title.Font = Enum.Font.GothamBold
Title.TextSize = 28
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.BorderSizePixel = 0

-- Button to start the job
ButtonStartJob.Parent = Frame
ButtonStartJob.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
ButtonStartJob.Size = UDim2.new(0.8, 0, 0.1, 0)
ButtonStartJob.Position = UDim2.new(0.1, 0, 0.2, 0)
ButtonStartJob.Text = "Start Job"
ButtonStartJob.Font = Enum.Font.Gotham
ButtonStartJob.TextSize = 20
ButtonStartJob.TextColor3 = Color3.fromRGB(255, 255, 255)
ButtonStartJob.BorderSizePixel = 0

-- Button to trigger auto farm
ButtonAutoFarm.Parent = Frame
ButtonAutoFarm.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
ButtonAutoFarm.Size = UDim2.new(0.8, 0, 0.1, 0)
ButtonAutoFarm.Position = UDim2.new(0.1, 0, 0.4, 0)
ButtonAutoFarm.Text = "Start AutoFarm"
ButtonAutoFarm.Font = Enum.Font.Gotham
ButtonAutoFarm.TextSize = 20
ButtonAutoFarm.TextColor3 = Color3.fromRGB(255, 255, 255)
ButtonAutoFarm.BorderSizePixel = 0

-- Configuration for server hop and farming
getgenv().cfg = {
    ["switch_servers_when_no_wood"] = true,
    ["serverhop_timeout"] = 80
}

-- Wait for the game to load
pcall(function()
    repeat task.wait(3) until game:IsLoaded()
    repeat task.wait(3) until game:GetService("Players").LocalPlayer.PlayerGui.BronxLoadscreen
end)

pcall(function()
    repeat firesignal(game:GetService("Players").LocalPlayer.PlayerGui.BronxLoadscreen.Frame.play.MouseButton1Click) until not game:GetService("Players").LocalPlayer.PlayerGui.BronxLoadscreen
end)

pcall(function()
    repeat task.wait(1) until not game:GetService("Players").LocalPlayer.PlayerGui.BronxLoadscreen
end)

-- Start job function to begin automation
local function startjob()
    local jobStartCFrame = workspace.ConstructionStuff["Start Job"].CFrame
    if not game.Players.LocalPlayer:GetAttribute("WorkingJob") or game.Players.LocalPlayer:GetAttribute("WorkingJob") == false then
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = jobStartCFrame
        fireproximityprompt(workspace.ConstructionStuff["Start Job"].Prompt)
    end
end

-- Auto farm functions
local function autoequipwood()
    if game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("PlyWood") then
        game:GetService("Players").LocalPlayer.Backpack.PlyWood.Parent = game:GetService("Players").LocalPlayer.Character
    end
end

local function wood()
    for _, v in pairs(workspace.ConstructionStuff:GetDescendants()) do
        if v:IsA("ProximityPrompt") and v.ActionText == "Wall" then
            fireproximityprompt(v)
        end
    end
end

local function grabwood()
    for _, v in pairs(workspace.ConstructionStuff["Grab Wood"]:GetChildren()) do
        if v:IsA("ProximityPrompt") and v.ActionText == "Wood" then
            fireproximityprompt(v)
        end
    end
end

local function mainautofarm()
    for _, v in pairs(workspace.ConstructionStuff:GetDescendants()) do
        if v:IsA("Part") and string.find(v.Name, "Prompt") then
            local text = v:FindFirstChild("Attachment"):FindFirstChild("Gui"):FindFirstChild("Label").Text
            if not string.find(text, "RESETS") then
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
            end
        end
    end
    if not (game.Players.LocalPlayer.Backpack:FindFirstChild("PlyWood") or game.Players.LocalPlayer.Character:FindFirstChild("PlyWood")) then
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1728, 371, -1177)
    end
end

-- Server hopping logic
local function TPReturner()
    local PlaceID = game.PlaceId
    local AllIDs = {}
    local Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))

    for _, v in pairs(Site.data) do
        local ID = tostring(v.id)
        if tonumber(v.maxPlayers) > tonumber(v.playing) then
            table.insert(AllIDs, ID)
            wait(2)
            pcall(function()
                game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
            end)
            wait(4)
        end
    end
end

-- Check for no wood
local function checkfornowood()
    if not cfg["switch_servers_when_no_wood"] then return end
    local x = true
    for _, v in pairs(workspace.ConstructionStuff:GetDescendants()) do
        if v:IsA("Part") and string.find(v.Name, "Prompt") then
            local text = v:FindFirstChild("Attachment"):FindFirstChild("Gui"):FindFirstChild("Label").Text
            if not string.find(text, "RESETS") then
                x = false
                break
            end
        end
    end
    if x then TPReturner() end
end

-- Timeout for server hop
local start = tick()
local function timeout()
    while true do
        task.wait(3)
        local currenttime = tick() - start
        if currenttime >= cfg["serverhop_timeout"] then
            TPReturner()
        end
    end
end

-- Auto start job and autofarm logic
task.spawn(function()
    repeat task.wait(1) until game.Players.LocalPlayer and game.Players.LocalPlayer.Character
    startjob()
end)

task.spawn(function()
    while task.wait(1/10) do
        xpcall(wood, debug.traceback)
        xpcall(grabwood, debug.traceback)
        xpcall(autoequipwood, debug.traceback)
        xpcall(mainautofarm, debug.traceback)
    end
end)

-- Button functions (optional backup)
ButtonStartJob.MouseButton1Click:Connect(startjob)

ButtonAutoFarm.MouseButton1Click:Connect(function()
    task.spawn(function()
        while task.wait(1/10) do
            xpcall(wood, debug.traceback)
            xpcall(grabwood, debug.traceback)
            xpcall(autoequipwood, debug.traceback)
            xpcall(mainautofarm, debug.traceback)
        end
    end)
end)

-- Start server hop timeout
task.spawn(timeout)

-- Periodically check for no wood
while task.wait(4) do
    xpcall(checkfornowood, debug.traceback)
end
